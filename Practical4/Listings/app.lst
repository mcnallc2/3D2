


ARM Macro Assembler    Page 1 


    1 00000000         ; Definitions  -- references to 'UM' are to the User Man
                       ual.
    2 00000000         
    3 00000000         ; Timer Stuff -- UM, Table 173
    4 00000000         
    5 00000000 E0004000 
                       T0      equ              0xE0004000  ; Timer 0 Base Addr
                                                            ess
    6 00000000 E0008000 
                       T1      equ              0xE0008000
    7 00000000         
    8 00000000 00000000 
                       IR      equ              0           ; Add this to a tim
                                                            er's base address t
                                                            o get actual regist
                                                            er address
    9 00000000 00000004 
                       TCR     equ              4
   10 00000000 00000014 
                       MCR     equ              0x14
   11 00000000 00000018 
                       MR0     equ              0x18
   12 00000000         
   13 00000000 00000002 
                       TimerCommandReset
                               equ              2
   14 00000000 00000001 
                       TimerCommandRun
                               equ              1
   15 00000000 00000003 
                       TimerModeResetAndInterrupt
                               equ              3
   16 00000000 00000001 
                       TimerResetTimer0Interrupt
                               equ              1
   17 00000000 000000FF 
                       TimerResetAllInterrupts
                               equ              0xFF
   18 00000000         
   19 00000000         ; VIC Stuff -- UM, Table 41
   20 00000000 FFFFF000 
                       VIC     equ              0xFFFFF000  ; VIC Base Address
   21 00000000 00000010 
                       IntEnable
                               equ              0x10
   22 00000000 00000030 
                       VectAddr
                               equ              0x30
   23 00000000 00000100 
                       VectAddr0
                               equ              0x100
   24 00000000 00000200 
                       VectCtrl0
                               equ              0x200
   25 00000000         
   26 00000000 00000004 
                       Timer0ChannelNumber
                               equ              4           ; UM, Table 63
   27 00000000 00000010 



ARM Macro Assembler    Page 2 


                       Timer0Mask
                               equ              1<<Timer0ChannelNumber 
                                                            ; UM, Table 63
   28 00000000 00000005 
                       IRQslot_en
                               equ              5           ; UM, Table 58
   29 00000000         
   30 00000000                 AREA             InitialisationAndMain, CODE, RE
ADONLY
   31 00000000                 IMPORT           main
   32 00000000         
   33 00000000         ; (c) Mike Brady, 2014 -- 2019.
   34 00000000         
   35 00000000                 EXPORT           start
   36 00000000         start
   37 00000000         ; initialisation code
   38 00000000         
   39 00000000 E0028008 
                       IO1DIR  EQU              0xE0028008
   40 00000000 E0028004 
                       IO1SET  EQU              0xE0028004
   41 00000000 E002800C 
                       IO1CLR  EQU              0xE002800C
   42 00000000         
   43 00000000         ;r1 now sets direction
   44 00000000 E59F20B8        ldr              r2,=IO1DIR
   45 00000004         ;select P0.16 leds
   46 00000004 E3A03826        ldr              r3, =0x00260000
   47 00000008         ;make the led outputs
   48 00000008 E5823000        str              r3, [r2]
   49 0000000C         
   50 0000000C         ;r1 now turns leds off
   51 0000000C E59F20B0        ldr              r2,=IO1SET
   52 00000010 E5823000        str              r3,[r2]
   53 00000014         
   54 00000014         
   55 00000014         ; Initialise the VIC
   56 00000014 E59F00AC        ldr              r0,=VIC     ; looking at you, V
                                                            IC!
   57 00000018         
   58 00000018 E59F10AC        ldr              r1,=irqhan
   59 0000001C E5801100        str              r1,[r0,#VectAddr0] ; associate 
                                                            our interrupt handl
                                                            er with Vectored In
                                                            terrupt 0
   60 00000020         
   61 00000020 E3A01024        mov              r1,#Timer0ChannelNumber+(1<<IRQ
slot_en)
   62 00000024 E5801200        str              r1,[r0,#VectCtrl0] ; make Timer
                                                             0 interrupts the s
                                                            ource of Vectored I
                                                            nterrupt 0
   63 00000028         
   64 00000028 E3A01010        mov              r1,#Timer0Mask
   65 0000002C E5801010        str              r1,[r0,#IntEnable] ; enable Tim
                                                            er 0 interrupts to 
                                                            be recognised by th
                                                            e VIC
   66 00000030         



ARM Macro Assembler    Page 3 


   67 00000030 E3A01000        mov              r1,#0
   68 00000034 E5801030        str              r1,[r0,#VectAddr] ; remove any 
                                                            pending interrupt (
                                                            may not be needed)
   69 00000038         
   70 00000038         ; Initialise Timer 0
   71 00000038 E59F0090        ldr              r0,=T0      ; looking at you, T
                                                            imer 0!
   72 0000003C         
   73 0000003C E3A01002        mov              r1,#TimerCommandReset
   74 00000040 E5801004        str              r1,[r0,#TCR]
   75 00000044         
   76 00000044 E3A010FF        mov              r1,#TimerResetAllInterrupts
   77 00000048 E5801000        str              r1,[r0,#IR]
   78 0000004C         
   79 0000004C E59F1080        ldr              r1,=(14745600/200)-1 ; 5 ms = 1
                                                            /200 second
   80 00000050 E5801018        str              r1,[r0,#MR0]
   81 00000054         
   82 00000054 E3A01003        mov              r1,#TimerModeResetAndInterrupt
   83 00000058 E5801014        str              r1,[r0,#MCR]
   84 0000005C         
   85 0000005C E3A01001        mov              r1,#TimerCommandRun
   86 00000060 E5801004        str              r1,[r0,#TCR]
   87 00000064         
   88 00000064         ;from here, initialisation is finished, so it should be 
                       the main body of the main program
   89 00000064         
   90 00000064 E59F506C        ldr              r5, =LUT
   91 00000068 E59F6054        ldr              r6,=IO1SET
   92 0000006C E59F7068        ldr              r7,=IO1CLR
   93 00000070 E3A08000        ldr              r8, =0
   94 00000074 E3A0C0C8        ldr              r12, =200
   95 00000078         
   96 00000078         loop1
   97 00000078 E59FB060        ldr              r11, =COUNT
   98 0000007C E59B4000        ldr              r4, [r11]
   99 00000080 E154000C        cmp              r4, r12
  100 00000084 1AFFFFFB        bne              loop1
  101 00000088 E28CC0C8        add              r12, #200
  102 0000008C         
  103 0000008C         ;now turn all leds off
  104 0000008C E5863000        str              r3,[r6]
  105 00000090         ;load in next led mask
  106 00000090 E7959008        ldr              r9, [r5, r8]
  107 00000094         ;turn on this led
  108 00000094 E5879000        str              r9, [r7]
  109 00000098         
  110 00000098 E258A008        subs             r10, r8, #8
  111 0000009C 1A000001        bne              increment
  112 000000A0 E1A0800A        mov              r8, r10
  113 000000A4 EA000000        b                no_increment
  114 000000A8         
  115 000000A8         increment
  116 000000A8 E2888004        add              r8, r8, #4
  117 000000AC         no_increment
  118 000000AC         
  119 000000AC EAFFFFF1        b                loop1
  120 000000B0         



ARM Macro Assembler    Page 4 


  121 000000B0 00200000 
              00020000 
              00040000 LUT     DCD              0x00200000, 0x00020000, 0x00040
000
  122 000000BC         
  123 000000BC EAFFFFFE 
                       wloop   b                wloop       ; branch always
  124 000000C0         ;main program execution will never drop below the statem
                       ent above.
  125 000000C0         
  126 000000C0 E0028008 
              E0028004 
              FFFFF000 
              00000000 
              E0004000 
              00011FFF 
              00000000 
              E002800C 
              00000000         AREA             InterruptStuff, CODE, READONLY
  127 00000000 E24EE004 
                       irqhan  sub              lr,lr,#4
  128 00000004 E92D4003        stmfd            sp!,{r0-r1,lr} ; the lr will be
                                                             restored to the pc
                                                            
  129 00000008         
  130 00000008         ;this is the body of the interrupt handler
  131 00000008         ;here you'd put the unique part of your interrupt handle
                       r
  132 00000008         ;all the other stuff is "housekeeping" to save registers
                        and acknowledge interrupts
  133 00000008         
  134 00000008         
  135 00000008 E59F0024        ldr              r0, =COUNT
  136 0000000C E5901000        ldr              r1, [r0]
  137 00000010 E2811001        add              r1, #1
  138 00000014 E5801000        str              r1, [r0]
  139 00000018         
  140 00000018         
  141 00000018         ;this is where we stop the timer from making the interru
                       pt request to the VIC
  142 00000018         ;i.e. we 'acknowledge' the interrupt
  143 00000018 E59F0018        ldr              r0,=T0
  144 0000001C E3A01001        mov              r1,#TimerResetTimer0Interrupt
  145 00000020 E5801000        str              r1,[r0,#IR] ; remove MR0 interr
                                                            upt request from ti
                                                            mer
  146 00000024         
  147 00000024         ;here we stop the VIC from making the interrupt request 
                       to the CPU:
  148 00000024 E59F0010        ldr              r0,=VIC
  149 00000028 E3A01000        mov              r1,#0
  150 0000002C E5801030        str              r1,[r0,#VectAddr] ; reset VIC
  151 00000030         
  152 00000030 E8FD8003        ldmfd            sp!,{r0-r1,pc}^ ; return from i
                                                            nterrupt, restoring
                                                             pc from lr
  153 00000034         ; and also restoring the CPSR
  154 00000034         
  155 00000034 00000000 



ARM Macro Assembler    Page 5 


              E0004000 
              FFFFF000         AREA             Counter, DATA, READWRITE
  156 00000000         
  157 00000000 00000000 
                       COUNT   DCD              0
  158 00000004         
  159 00000004                 END
Command Line: --debug --xref --diag_suppress=9931 --apcs=interwork --depend=.\a
pp.d -o.\app.o -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Ke
il_v5\ARM\Inc\Philips --predefine="__MICROLIB SETA 1" --predefine="__UVISION_VE
RSION SETA 516" --list=.\listings\app.lst App.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

InitialisationAndMain 00000000

Symbol: InitialisationAndMain
   Definitions
      At line 30 in file App.s
   Uses
      None
Comment: InitialisationAndMain unused
LUT 000000B0

Symbol: LUT
   Definitions
      At line 121 in file App.s
   Uses
      At line 90 in file App.s
Comment: LUT used once
increment 000000A8

Symbol: increment
   Definitions
      At line 115 in file App.s
   Uses
      At line 111 in file App.s
Comment: increment used once
loop1 00000078

Symbol: loop1
   Definitions
      At line 96 in file App.s
   Uses
      At line 100 in file App.s
      At line 119 in file App.s

no_increment 000000AC

Symbol: no_increment
   Definitions
      At line 117 in file App.s
   Uses
      At line 113 in file App.s
Comment: no_increment used once
start 00000000

Symbol: start
   Definitions
      At line 36 in file App.s
   Uses
      At line 35 in file App.s
Comment: start used once
wloop 000000BC

Symbol: wloop
   Definitions
      At line 123 in file App.s
   Uses
      At line 123 in file App.s
Comment: wloop used once
7 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

InterruptStuff 00000000

Symbol: InterruptStuff
   Definitions
      At line 126 in file App.s
   Uses
      None
Comment: InterruptStuff unused
irqhan 00000000

Symbol: irqhan
   Definitions
      At line 127 in file App.s
   Uses
      At line 58 in file App.s
Comment: irqhan used once
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

COUNT 00000000

Symbol: COUNT
   Definitions
      At line 157 in file App.s
   Uses
      At line 97 in file App.s
      At line 135 in file App.s

Counter 00000000

Symbol: Counter
   Definitions
      At line 155 in file App.s
   Uses
      None
Comment: Counter unused
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

IO1CLR E002800C

Symbol: IO1CLR
   Definitions
      At line 41 in file App.s
   Uses
      At line 92 in file App.s
Comment: IO1CLR used once
IO1DIR E0028008

Symbol: IO1DIR
   Definitions
      At line 39 in file App.s
   Uses
      At line 44 in file App.s
Comment: IO1DIR used once
IO1SET E0028004

Symbol: IO1SET
   Definitions
      At line 40 in file App.s
   Uses
      At line 51 in file App.s
      At line 91 in file App.s

IR 00000000

Symbol: IR
   Definitions
      At line 8 in file App.s
   Uses
      At line 77 in file App.s
      At line 145 in file App.s

IRQslot_en 00000005

Symbol: IRQslot_en
   Definitions
      At line 28 in file App.s
   Uses
      At line 61 in file App.s
Comment: IRQslot_en used once
IntEnable 00000010

Symbol: IntEnable
   Definitions
      At line 21 in file App.s
   Uses
      At line 65 in file App.s
Comment: IntEnable used once
MCR 00000014

Symbol: MCR
   Definitions
      At line 10 in file App.s
   Uses
      At line 83 in file App.s
Comment: MCR used once
MR0 00000018



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols


Symbol: MR0
   Definitions
      At line 11 in file App.s
   Uses
      At line 80 in file App.s
Comment: MR0 used once
T0 E0004000

Symbol: T0
   Definitions
      At line 5 in file App.s
   Uses
      At line 71 in file App.s
      At line 143 in file App.s

T1 E0008000

Symbol: T1
   Definitions
      At line 6 in file App.s
   Uses
      None
Comment: T1 unused
TCR 00000004

Symbol: TCR
   Definitions
      At line 9 in file App.s
   Uses
      At line 74 in file App.s
      At line 86 in file App.s

Timer0ChannelNumber 00000004

Symbol: Timer0ChannelNumber
   Definitions
      At line 26 in file App.s
   Uses
      At line 27 in file App.s
      At line 61 in file App.s

Timer0Mask 00000010

Symbol: Timer0Mask
   Definitions
      At line 27 in file App.s
   Uses
      At line 64 in file App.s
Comment: Timer0Mask used once
TimerCommandReset 00000002

Symbol: TimerCommandReset
   Definitions
      At line 13 in file App.s
   Uses
      At line 73 in file App.s
Comment: TimerCommandReset used once
TimerCommandRun 00000001



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols


Symbol: TimerCommandRun
   Definitions
      At line 14 in file App.s
   Uses
      At line 85 in file App.s
Comment: TimerCommandRun used once
TimerModeResetAndInterrupt 00000003

Symbol: TimerModeResetAndInterrupt
   Definitions
      At line 15 in file App.s
   Uses
      At line 82 in file App.s
Comment: TimerModeResetAndInterrupt used once
TimerResetAllInterrupts 000000FF

Symbol: TimerResetAllInterrupts
   Definitions
      At line 17 in file App.s
   Uses
      At line 76 in file App.s
Comment: TimerResetAllInterrupts used once
TimerResetTimer0Interrupt 00000001

Symbol: TimerResetTimer0Interrupt
   Definitions
      At line 16 in file App.s
   Uses
      At line 144 in file App.s
Comment: TimerResetTimer0Interrupt used once
VIC FFFFF000

Symbol: VIC
   Definitions
      At line 20 in file App.s
   Uses
      At line 56 in file App.s
      At line 148 in file App.s

VectAddr 00000030

Symbol: VectAddr
   Definitions
      At line 22 in file App.s
   Uses
      At line 68 in file App.s
      At line 150 in file App.s

VectAddr0 00000100

Symbol: VectAddr0
   Definitions
      At line 23 in file App.s
   Uses
      At line 59 in file App.s
Comment: VectAddr0 used once
VectCtrl0 00000200




ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Absolute symbols

Symbol: VectCtrl0
   Definitions
      At line 24 in file App.s
   Uses
      At line 62 in file App.s
Comment: VectCtrl0 used once
22 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

main 00000000

Symbol: main
   Definitions
      At line 31 in file App.s
   Uses
      None
Comment: main unused
1 symbol
370 symbols in table
