


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             AsmTemplate, CODE, READONLY
    2 00000000                 IMPORT           main
    3 00000000         
    4 00000000         ; Practical 2 makes the 4 LEDs light up to represent a 3
                       2 bit number
    5 00000000         ; Group 24
    6 00000000         
    7 00000000                 EXPORT           start
    8 00000000         start
    9 00000000         
   10 00000000         ;initalising the i/o ports for the board
   11 00000000 E0028018 
                       IO1DIR  EQU              0xE0028018
   12 00000000 E0028014 
                       IO1SET  EQU              0xE0028014
   13 00000000 E002801C 
                       IO1CLR  EQU              0xE002801C
   14 00000000 E0028010 
                       IO1PIN  EQU              0xE0028010
   15 00000000         
   16 00000000         ;r1 now sets direction
   17 00000000 E59F1238        ldr              r1,=IO1DIR
   18 00000004         ;select P1.19--P1.16 leds
   19 00000004 E3A0280F        ldr              r2,=0x000F0000
   20 00000008         ;make the leds outputs
   21 00000008 E5812000        str              r2,[r1]
   22 0000000C         ;r1 now turns leds off
   23 0000000C E59F1230        ldr              r1,=IO1SET
   24 00000010         ;turn the LEDs off
   25 00000010 E5812000        str              r2,[r1]
   26 00000014         
   27 00000014         ;r9 now turns on leds
   28 00000014 E59F922C        ldr              r9,=IO1CLR
   29 00000018         ;r3 now reads in signals from buttons
   30 00000018 E59F322C        ldr              r3, =IO1PIN
   31 0000001C         
   32 0000001C         ;initialising registers  
   33 0000001C E3A04000        mov              r4,  #0
   34 00000020 E3A05000        mov              r5,  #0
   35 00000024 E3A06000        mov              r6,  #0
   36 00000028 E3A07000        mov              r7,  #0
   37 0000002C E3A08000        mov              r8,  #0
   38 00000030 E3A0A000        mov              r10, #0
   39 00000034 E3A0B000        mov              r11, #0
   40 00000038 E3A0C000        mov              r12, #0
   41 0000003C         
   42 0000003C         ;r5 now represents binary 1 on the leds
   43 0000003C E3A05801        ldr              r5, =0x00010000
   44 00000040         
   45 00000040         
   46 00000040         ;entering main loop
   47 00000040         wloop
   48 00000040         
   49 00000040         ;turning off all leds
   50 00000040 E5812000        str              r2,[r1]
   51 00000044 E5937000        ldr              r7,[r3]
   52 00000048 E207760F        and              r7, r7 ,#0x00f00000 
                                                            ; masking buttons
   53 0000004C         



ARM Macro Assembler    Page 2 


   54 0000004C         
   55 0000004C E357060E        cmp              r7, #0x00E00000
   56 00000050 0A000006        beq              inc
   57 00000054 E357060D        cmp              r7, #0x00D00000
   58 00000058 0A000006        beq              dec
   59 0000005C E357060B        cmp              r7, #0x00B00000 ; addition
   60 00000060 0A000006        beq              addi
   61 00000064 E3570607        cmp              r7, #0x00700000 ; subtraction
   62 00000068 0A000006        beq              subt
   63 0000006C         
   64 0000006C EAFFFFF3        B                wloop
   65 00000070         
   66 00000070         inc
   67 00000070 EB000007        BL               increment
   68 00000074 EAFFFFF1        B                wloop
   69 00000078         dec
   70 00000078 EB000014        BL               decrement
   71 0000007C EAFFFFEF        b                wloop
   72 00000080         addi
   73 00000080 EB000021        BL               addition
   74 00000084 EAFFFFED        B                wloop
   75 00000088         subt
   76 00000088 EB00004B        BL               subtraction
   77 0000008C EAFFFFEB        B                wloop
   78 00000090         
   79 00000090 EAFFFFFE 
                       stop    B                stop
   80 00000094         
   81 00000094         ;subroutine for incrementing the current number
   82 00000094         increment
   83 00000094         
   84 00000094 E59F81B4        ldr              r8,=1000000 ;delay for debounce
                                                            
   85 00000098 E1A08008        mov              r8, r8
   86 0000009C         _debounce
   87 0000009C E2588001        subs             r8,r8,#1
   88 000000A0 1AFFFFFD        bne              _debounce
   89 000000A4         
   90 000000A4 E5937000        ldr              r7,[r3]
   91 000000A8 E207760F        and              r7, r7 ,#0x00F00000
   92 000000AC E357060E        cmp              r7, #0x00E00000
   93 000000B0 1A000005        bne              finish1
   94 000000B4         
   95 000000B4 E0844005        add              r4, r4, r5
   96 000000B8 E5894000        str              r4,[r9]
   97 000000BC         
   98 000000BC         
   99 000000BC         ;delay to show the number for split second
  100 000000BC E59F8190        ldr              r8,=10000000
  101 000000C0 E1A08008        mov              r8, r8
  102 000000C4         _delay
  103 000000C4 E2588001        subs             r8,r8,#1
  104 000000C8 1AFFFFFD        bne              _delay
  105 000000CC         
  106 000000CC         finish1
  107 000000CC E12FFF1E        BX               lr
  108 000000D0         
  109 000000D0         
  110 000000D0         ;subroutine for decrementing the current number



ARM Macro Assembler    Page 3 


  111 000000D0         decrement
  112 000000D0         
  113 000000D0 E59F8178        ldr              r8,=1000000 ;delay for debounce
                                                            
  114 000000D4 E1A08008        mov              r8, r8
  115 000000D8         _debounce2
  116 000000D8 E2588001        subs             r8,r8,#1
  117 000000DC 1AFFFFFD        bne              _debounce2
  118 000000E0         
  119 000000E0 E5937000        ldr              r7,[r3]
  120 000000E4 E207760F        and              r7, r7 ,#0x00F00000
  121 000000E8 E357060D        cmp              r7, #0x00D00000
  122 000000EC 1A000005        bne              finish2
  123 000000F0         
  124 000000F0 E0444005        sub              r4, r4, r5
  125 000000F4 E5894000        str              r4,[r9]
  126 000000F8         
  127 000000F8         ;delay to show the number for split second
  128 000000F8 E59F8154        ldr              r8,=10000000
  129 000000FC E1A08008        mov              r8, r8
  130 00000100         _delay2
  131 00000100 E2588001        subs             r8,r8,#1
  132 00000104 1AFFFFFD        bne              _delay2
  133 00000108         
  134 00000108         finish2
  135 00000108 E12FFF1E        BX               lr
  136 0000010C         
  137 0000010C         
  138 0000010C         ;subroutine for addition
  139 0000010C         addition
  140 0000010C         
  141 0000010C E59F813C        ldr              r8,=1000000 ;delay for debounce
                                                            
  142 00000110 E1A08008        mov              r8, r8
  143 00000114         _debounce3
  144 00000114 E2588001        subs             r8,r8,#1
  145 00000118 1AFFFFFD        bne              _debounce3
  146 0000011C         
  147 0000011C E5937000        ldr              r7,[r3]
  148 00000120 E207760F        and              r7, r7 ,#0x00F00000
  149 00000124 E357060B        cmp              r7, #0x00B00000
  150 00000128 1A000022        bne              finish3
  151 0000012C         
  152 0000012C         ;delay to check if there was a long press
  153 0000012C E59F8120        ldr              r8,=10000000
  154 00000130 E1A08008        mov              r8, r8
  155 00000134         _longpress
  156 00000134 E2588001        subs             r8,r8,#1
  157 00000138 1AFFFFFD        bne              _longpress
  158 0000013C         
  159 0000013C         ;check value of buttons
  160 0000013C E5937000        ldr              r7,[r3]
  161 00000140 E207760F        and              r7, r7 ,#0x00F00000
  162 00000144         ;if button is still pressed it is a long press
  163 00000144 E357060B        cmp              r7, #0x00B00000
  164 00000148         ;if its a long press skip over next steps
  165 00000148 0A000008        beq              long_press
  166 0000014C         
  167 0000014C E08AA004        add              r10, r10, r4



ARM Macro Assembler    Page 4 


  168 00000150 E589A000        str              r10, [r9]
  169 00000154 E1A0C00A        mov              r12, r10
  170 00000158 E3A04000        mov              r4, #0
  171 0000015C         
  172 0000015C         ;delay to show the number for split second
  173 0000015C E59F80F0        ldr              r8,=10000000
  174 00000160 E1A08008        mov              r8, r8
  175 00000164         _delay3
  176 00000164 E2588001        subs             r8,r8,#1
  177 00000168 1AFFFFFD        bne              _delay3
  178 0000016C         
  179 0000016C EA000011        B                finish3
  180 00000170         
  181 00000170         long_press
  182 00000170 E3A0A80F        ldr              r10, =0x000F0000
  183 00000174 E589A000        str              r10, [r9]
  184 00000178         
  185 00000178 E59F80D8        ldr              r8,=3000000 ;delay to show the 
                                                            number
  186 0000017C E1A08008        mov              r8, r8
  187 00000180         _delay3_1
  188 00000180 E2588001        subs             r8,r8,#1
  189 00000184 1AFFFFFD        bne              _delay3_1
  190 00000188         
  191 00000188 E581A000        str              r10, [r1]
  192 0000018C E59F80C4        ldr              r8,=3000000 ;delay to show the 
                                                            number
  193 00000190 E1A08008        mov              r8, r8
  194 00000194         _delay3_2
  195 00000194 E2588001        subs             r8,r8,#1
  196 00000198 1AFFFFFD        bne              _delay3_2
  197 0000019C         
  198 0000019C E589A000        str              r10, [r9]
  199 000001A0 E59F80B0        ldr              r8,=3000000 ;delay to show the 
                                                            number
  200 000001A4 E1A08008        mov              r8, r8
  201 000001A8         _delay3_3
  202 000001A8 E2588001        subs             r8,r8,#1
  203 000001AC 1AFFFFFD        bne              _delay3_3
  204 000001B0         
  205 000001B0 E1A0A00C        mov              r10, r12
  206 000001B4 E3A04000        mov              r4, #0
  207 000001B8         
  208 000001B8         finish3
  209 000001B8 E12FFF1E        BX               lr
  210 000001BC         
  211 000001BC         
  212 000001BC         ;subroutine for subtration and clearing everything
  213 000001BC         subtraction
  214 000001BC         
  215 000001BC         ;delay used for debounce
  216 000001BC E59F808C        ldr              r8,=1000000
  217 000001C0 E1A08008        mov              r8, r8
  218 000001C4         _debounce4
  219 000001C4 E2588001        subs             r8,r8,#1
  220 000001C8 1AFFFFFD        bne              _debounce4
  221 000001CC         
  222 000001CC         ;check value of the buttons
  223 000001CC E5937000        ldr              r7,[r3]



ARM Macro Assembler    Page 5 


  224 000001D0 E207760F        and              r7, r7 ,#0x00F00000
  225 000001D4         ;check if the button is still pressed 
  226 000001D4 E3570607        cmp              r7, #0x00700000
  227 000001D8         ;if not, it was bounce
  228 000001D8 1A000017        bne              finish4
  229 000001DC         
  230 000001DC         ;delay to check if there was a long press
  231 000001DC E59F8070        ldr              r8,=10000000
  232 000001E0 E1A08008        mov              r8, r8
  233 000001E4         _longpress1
  234 000001E4 E2588001        subs             r8,r8,#1
  235 000001E8 1AFFFFFD        bne              _longpress1
  236 000001EC         
  237 000001EC         ;check value of buttons
  238 000001EC E5937000        ldr              r7,[r3]
  239 000001F0 E207760F        and              r7, r7 ,#0x00F00000
  240 000001F4         ;if button is still pressed it is a long press
  241 000001F4 E3570607        cmp              r7, #0x00700000
  242 000001F8         ;if its a long press skip over next steps
  243 000001F8 0A000007        beq              long_press1
  244 000001FC         
  245 000001FC         ;if it wasnt a long press 
  246 000001FC         ;subtract current number from 
  247 000001FC E04AA004        sub              r10, r10, r4
  248 00000200         ;display the result of the previous calculation
  249 00000200 E589A000        str              r10, [r9]
  250 00000204 E3A04000        mov              r4, #0
  251 00000208 E59F8044        ldr              r8,=10000000 ;delay to show the
                                                             number
  252 0000020C E1A08008        mov              r8, r8
  253 00000210         _delay4_1
  254 00000210 E2588001        subs             r8,r8,#1
  255 00000214 1AFFFFFD        bne              _delay4_1
  256 00000218         
  257 00000218 EA000007        B                finish4
  258 0000021C         
  259 0000021C         long_press1
  260 0000021C E3A0A80F        ldr              r10, =0x000F0000
  261 00000220 E589A000        str              r10, [r9]
  262 00000224         
  263 00000224 E59F8028        ldr              r8,=10000000 ;delay to show the
                                                             number
  264 00000228 E1A08008        mov              r8, r8
  265 0000022C         _delay4_2
  266 0000022C E2588001        subs             r8,r8,#1
  267 00000230 1AFFFFFD        bne              _delay4_2
  268 00000234         
  269 00000234 E3A04000        mov              r4, #0
  270 00000238 E3A0A000        mov              r10,#0
  271 0000023C         
  272 0000023C         finish4
  273 0000023C E12FFF1E        BX               lr
  274 00000240         
  275 00000240         
  276 00000240                 END
              E0028018 
              E0028014 
              E002801C 
              E0028010 



ARM Macro Assembler    Page 6 


              000F4240 
              00989680 
              002DC6C0 
Command Line: --debug --xref --diag_suppress=9931 --apcs=interwork --depend=.\a
pp.d -o.\app.o -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Ke
il_v5\ARM\Inc\Philips --predefine="__EVAL SETA 1" --predefine="__MICROLIB SETA 
1" --predefine="__UVISION_VERSION SETA 516" --list=.\listings\app.lst App.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

AsmTemplate 00000000

Symbol: AsmTemplate
   Definitions
      At line 1 in file App.s
   Uses
      None
Comment: AsmTemplate unused
_debounce 0000009C

Symbol: _debounce
   Definitions
      At line 86 in file App.s
   Uses
      At line 88 in file App.s
Comment: _debounce used once
_debounce2 000000D8

Symbol: _debounce2
   Definitions
      At line 115 in file App.s
   Uses
      At line 117 in file App.s
Comment: _debounce2 used once
_debounce3 00000114

Symbol: _debounce3
   Definitions
      At line 143 in file App.s
   Uses
      At line 145 in file App.s
Comment: _debounce3 used once
_debounce4 000001C4

Symbol: _debounce4
   Definitions
      At line 218 in file App.s
   Uses
      At line 220 in file App.s
Comment: _debounce4 used once
_delay 000000C4

Symbol: _delay
   Definitions
      At line 102 in file App.s
   Uses
      At line 104 in file App.s
Comment: _delay used once
_delay2 00000100

Symbol: _delay2
   Definitions
      At line 130 in file App.s
   Uses
      At line 132 in file App.s
Comment: _delay2 used once
_delay3 00000164

Symbol: _delay3



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 175 in file App.s
   Uses
      At line 177 in file App.s
Comment: _delay3 used once
_delay3_1 00000180

Symbol: _delay3_1
   Definitions
      At line 187 in file App.s
   Uses
      At line 189 in file App.s
Comment: _delay3_1 used once
_delay3_2 00000194

Symbol: _delay3_2
   Definitions
      At line 194 in file App.s
   Uses
      At line 196 in file App.s
Comment: _delay3_2 used once
_delay3_3 000001A8

Symbol: _delay3_3
   Definitions
      At line 201 in file App.s
   Uses
      At line 203 in file App.s
Comment: _delay3_3 used once
_delay4_1 00000210

Symbol: _delay4_1
   Definitions
      At line 253 in file App.s
   Uses
      At line 255 in file App.s
Comment: _delay4_1 used once
_delay4_2 0000022C

Symbol: _delay4_2
   Definitions
      At line 265 in file App.s
   Uses
      At line 267 in file App.s
Comment: _delay4_2 used once
_longpress 00000134

Symbol: _longpress
   Definitions
      At line 155 in file App.s
   Uses
      At line 157 in file App.s
Comment: _longpress used once
_longpress1 000001E4

Symbol: _longpress1
   Definitions
      At line 233 in file App.s
   Uses



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

      At line 235 in file App.s
Comment: _longpress1 used once
addi 00000080

Symbol: addi
   Definitions
      At line 72 in file App.s
   Uses
      At line 60 in file App.s
Comment: addi used once
addition 0000010C

Symbol: addition
   Definitions
      At line 139 in file App.s
   Uses
      At line 73 in file App.s
Comment: addition used once
dec 00000078

Symbol: dec
   Definitions
      At line 69 in file App.s
   Uses
      At line 58 in file App.s
Comment: dec used once
decrement 000000D0

Symbol: decrement
   Definitions
      At line 111 in file App.s
   Uses
      At line 70 in file App.s
Comment: decrement used once
finish1 000000CC

Symbol: finish1
   Definitions
      At line 106 in file App.s
   Uses
      At line 93 in file App.s
Comment: finish1 used once
finish2 00000108

Symbol: finish2
   Definitions
      At line 134 in file App.s
   Uses
      At line 122 in file App.s
Comment: finish2 used once
finish3 000001B8

Symbol: finish3
   Definitions
      At line 208 in file App.s
   Uses
      At line 150 in file App.s
      At line 179 in file App.s




ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols

finish4 0000023C

Symbol: finish4
   Definitions
      At line 272 in file App.s
   Uses
      At line 228 in file App.s
      At line 257 in file App.s

inc 00000070

Symbol: inc
   Definitions
      At line 66 in file App.s
   Uses
      At line 56 in file App.s
Comment: inc used once
increment 00000094

Symbol: increment
   Definitions
      At line 82 in file App.s
   Uses
      At line 67 in file App.s
Comment: increment used once
long_press 00000170

Symbol: long_press
   Definitions
      At line 181 in file App.s
   Uses
      At line 165 in file App.s
Comment: long_press used once
long_press1 0000021C

Symbol: long_press1
   Definitions
      At line 259 in file App.s
   Uses
      At line 243 in file App.s
Comment: long_press1 used once
start 00000000

Symbol: start
   Definitions
      At line 8 in file App.s
   Uses
      At line 7 in file App.s
Comment: start used once
stop 00000090

Symbol: stop
   Definitions
      At line 79 in file App.s
   Uses
      At line 79 in file App.s
Comment: stop used once
subt 00000088




ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Relocatable symbols

Symbol: subt
   Definitions
      At line 75 in file App.s
   Uses
      At line 62 in file App.s
Comment: subt used once
subtraction 000001BC

Symbol: subtraction
   Definitions
      At line 213 in file App.s
   Uses
      At line 76 in file App.s
Comment: subtraction used once
wloop 00000040

Symbol: wloop
   Definitions
      At line 47 in file App.s
   Uses
      At line 64 in file App.s
      At line 68 in file App.s
      At line 71 in file App.s
      At line 74 in file App.s
      At line 77 in file App.s

32 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

IO1CLR E002801C

Symbol: IO1CLR
   Definitions
      At line 13 in file App.s
   Uses
      At line 28 in file App.s
Comment: IO1CLR used once
IO1DIR E0028018

Symbol: IO1DIR
   Definitions
      At line 11 in file App.s
   Uses
      At line 17 in file App.s
Comment: IO1DIR used once
IO1PIN E0028010

Symbol: IO1PIN
   Definitions
      At line 14 in file App.s
   Uses
      At line 30 in file App.s
Comment: IO1PIN used once
IO1SET E0028014

Symbol: IO1SET
   Definitions
      At line 12 in file App.s
   Uses
      At line 23 in file App.s
Comment: IO1SET used once
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

main 00000000

Symbol: main
   Definitions
      At line 2 in file App.s
   Uses
      None
Comment: main unused
1 symbol
372 symbols in table
